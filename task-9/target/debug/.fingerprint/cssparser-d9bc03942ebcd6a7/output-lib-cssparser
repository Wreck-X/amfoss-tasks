{"future_incompat_report":[{"diagnostic":{"message":"using `procedural-masquerade` crate","code":{"code":"proc_macro_back_compat","explanation":null},"level":"warning","spans":[{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8966,"byte_end":8995,"line_start":259,"line_end":259,"column_start":46,"column_end":75,"is_primary":true,"text":[{"text":"                                        enum ProceduralMasqueradeDummyType {","highlight_start":46,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1423,"byte_end":1567,"line_start":38,"line_end":40,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            cssparser_internal__invoke_proc_macro! {","highlight_start":13,"highlight_end":53},{"text":"                cssparser_internal__assert_ascii_lowercase__max_len!( $( $match_body )* )","highlight_start":1,"highlight_end":90},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":6233,"byte_end":6557,"line_start":227,"line_end":233,"column_start":31,"column_end":18,"is_primary":false,"text":[{"text":"                let degrees = match_ignore_ascii_case! { &*unit,","highlight_start":31,"highlight_end":65},{"text":"                    \"deg\" => v,","highlight_start":1,"highlight_end":32},{"text":"                    \"grad\" => v * 360. / 400.,","highlight_start":1,"highlight_end":47},{"text":"                    \"rad\" => v * 360. / (2. * PI),","highlight_start":1,"highlight_end":51},{"text":"                    \"turn\" => v * 360.,","highlight_start":1,"highlight_end":40},{"text":"                    _ => return Err(location.new_unexpected_token_error(Token::Ident(unit.clone()))),","highlight_start":1,"highlight_end":102},{"text":"                };","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"match_ignore_ascii_case!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1315,"byte_end":1351,"line_start":35,"line_end":35,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"macro_rules! match_ignore_ascii_case {","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"cssparser_internal__invoke_proc_macro!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8689,"byte_end":8713,"line_start":255,"line_end":255,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        macro_rules! $macro_name {","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[allow(proc_macro_back_compat)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: using `procedural-masquerade` crate\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs:227:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                let degrees = match_ignore_ascii_case! { &*unit,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m_______________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"deg\" => v,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"grad\" => v * 360. / 400.,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"rad\" => v * 360. / (2. * PI),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"turn\" => v * 360.,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    _ => return Err(location.new_unexpected_token_error(Token::Ident(unit.clone()))),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(proc_macro_back_compat)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `cssparser_internal__invoke_proc_macro` which comes from the expansion of the macro `match_ignore_ascii_case` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"using `procedural-masquerade` crate","code":{"code":"proc_macro_back_compat","explanation":null},"level":"warning","spans":[{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8966,"byte_end":8995,"line_start":259,"line_end":259,"column_start":46,"column_end":75,"is_primary":true,"text":[{"text":"                                        enum ProceduralMasqueradeDummyType {","highlight_start":46,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":3257,"byte_end":3392,"line_start":86,"line_end":88,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            cssparser_internal__invoke_proc_macro! {","highlight_start":13,"highlight_end":53},{"text":"                cssparser_internal__phf_map!( ($ValueType) $( $key ($value) )+ )","highlight_start":1,"highlight_end":81},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":11267,"byte_end":18432,"line_start":371,"line_end":526,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    ascii_case_insensitive_phf_map! {","highlight_start":5,"highlight_end":38},{"text":"        keyword -> Color = {","highlight_start":1,"highlight_end":29},{"text":"            \"black\" => rgb!(0, 0, 0),","highlight_start":1,"highlight_end":38},{"text":"            \"silver\" => rgb!(192, 192, 192),","highlight_start":1,"highlight_end":45},{"text":"            \"gray\" => rgb!(128, 128, 128),","highlight_start":1,"highlight_end":43},{"text":"            \"white\" => rgb!(255, 255, 255),","highlight_start":1,"highlight_end":44},{"text":"            \"maroon\" => rgb!(128, 0, 0),","highlight_start":1,"highlight_end":41},{"text":"            \"red\" => rgb!(255, 0, 0),","highlight_start":1,"highlight_end":38},{"text":"            \"purple\" => rgb!(128, 0, 128),","highlight_start":1,"highlight_end":43},{"text":"            \"fuchsia\" => rgb!(255, 0, 255),","highlight_start":1,"highlight_end":44},{"text":"            \"green\" => rgb!(0, 128, 0),","highlight_start":1,"highlight_end":40},{"text":"            \"lime\" => rgb!(0, 255, 0),","highlight_start":1,"highlight_end":39},{"text":"            \"olive\" => rgb!(128, 128, 0),","highlight_start":1,"highlight_end":42},{"text":"            \"yellow\" => rgb!(255, 255, 0),","highlight_start":1,"highlight_end":43},{"text":"            \"navy\" => rgb!(0, 0, 128),","highlight_start":1,"highlight_end":39},{"text":"            \"blue\" => rgb!(0, 0, 255),","highlight_start":1,"highlight_end":39},{"text":"            \"teal\" => rgb!(0, 128, 128),","highlight_start":1,"highlight_end":41},{"text":"            \"aqua\" => rgb!(0, 255, 255),","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            \"aliceblue\" => rgb!(240, 248, 255),","highlight_start":1,"highlight_end":48},{"text":"            \"antiquewhite\" => rgb!(250, 235, 215),","highlight_start":1,"highlight_end":51},{"text":"            \"aquamarine\" => rgb!(127, 255, 212),","highlight_start":1,"highlight_end":49},{"text":"            \"azure\" => rgb!(240, 255, 255),","highlight_start":1,"highlight_end":44},{"text":"            \"beige\" => rgb!(245, 245, 220),","highlight_start":1,"highlight_end":44},{"text":"            \"bisque\" => rgb!(255, 228, 196),","highlight_start":1,"highlight_end":45},{"text":"            \"blanchedalmond\" => rgb!(255, 235, 205),","highlight_start":1,"highlight_end":53},{"text":"            \"blueviolet\" => rgb!(138, 43, 226),","highlight_start":1,"highlight_end":48},{"text":"            \"brown\" => rgb!(165, 42, 42),","highlight_start":1,"highlight_end":42},{"text":"            \"burlywood\" => rgb!(222, 184, 135),","highlight_start":1,"highlight_end":48},{"text":"            \"cadetblue\" => rgb!(95, 158, 160),","highlight_start":1,"highlight_end":47},{"text":"            \"chartreuse\" => rgb!(127, 255, 0),","highlight_start":1,"highlight_end":47},{"text":"            \"chocolate\" => rgb!(210, 105, 30),","highlight_start":1,"highlight_end":47},{"text":"            \"coral\" => rgb!(255, 127, 80),","highlight_start":1,"highlight_end":43},{"text":"            \"cornflowerblue\" => rgb!(100, 149, 237),","highlight_start":1,"highlight_end":53},{"text":"            \"cornsilk\" => rgb!(255, 248, 220),","highlight_start":1,"highlight_end":47},{"text":"            \"crimson\" => rgb!(220, 20, 60),","highlight_start":1,"highlight_end":44},{"text":"            \"cyan\" => rgb!(0, 255, 255),","highlight_start":1,"highlight_end":41},{"text":"            \"darkblue\" => rgb!(0, 0, 139),","highlight_start":1,"highlight_end":43},{"text":"            \"darkcyan\" => rgb!(0, 139, 139),","highlight_start":1,"highlight_end":45},{"text":"            \"darkgoldenrod\" => rgb!(184, 134, 11),","highlight_start":1,"highlight_end":51},{"text":"            \"darkgray\" => rgb!(169, 169, 169),","highlight_start":1,"highlight_end":47},{"text":"            \"darkgreen\" => rgb!(0, 100, 0),","highlight_start":1,"highlight_end":44},{"text":"            \"darkgrey\" => rgb!(169, 169, 169),","highlight_start":1,"highlight_end":47},{"text":"            \"darkkhaki\" => rgb!(189, 183, 107),","highlight_start":1,"highlight_end":48},{"text":"            \"darkmagenta\" => rgb!(139, 0, 139),","highlight_start":1,"highlight_end":48},{"text":"            \"darkolivegreen\" => rgb!(85, 107, 47),","highlight_start":1,"highlight_end":51},{"text":"            \"darkorange\" => rgb!(255, 140, 0),","highlight_start":1,"highlight_end":47},{"text":"            \"darkorchid\" => rgb!(153, 50, 204),","highlight_start":1,"highlight_end":48},{"text":"            \"darkred\" => rgb!(139, 0, 0),","highlight_start":1,"highlight_end":42},{"text":"            \"darksalmon\" => rgb!(233, 150, 122),","highlight_start":1,"highlight_end":49},{"text":"            \"darkseagreen\" => rgb!(143, 188, 143),","highlight_start":1,"highlight_end":51},{"text":"            \"darkslateblue\" => rgb!(72, 61, 139),","highlight_start":1,"highlight_end":50},{"text":"            \"darkslategray\" => rgb!(47, 79, 79),","highlight_start":1,"highlight_end":49},{"text":"            \"darkslategrey\" => rgb!(47, 79, 79),","highlight_start":1,"highlight_end":49},{"text":"            \"darkturquoise\" => rgb!(0, 206, 209),","highlight_start":1,"highlight_end":50},{"text":"            \"darkviolet\" => rgb!(148, 0, 211),","highlight_start":1,"highlight_end":47},{"text":"            \"deeppink\" => rgb!(255, 20, 147),","highlight_start":1,"highlight_end":46},{"text":"            \"deepskyblue\" => rgb!(0, 191, 255),","highlight_start":1,"highlight_end":48},{"text":"            \"dimgray\" => rgb!(105, 105, 105),","highlight_start":1,"highlight_end":46},{"text":"            \"dimgrey\" => rgb!(105, 105, 105),","highlight_start":1,"highlight_end":46},{"text":"            \"dodgerblue\" => rgb!(30, 144, 255),","highlight_start":1,"highlight_end":48},{"text":"            \"firebrick\" => rgb!(178, 34, 34),","highlight_start":1,"highlight_end":46},{"text":"            \"floralwhite\" => rgb!(255, 250, 240),","highlight_start":1,"highlight_end":50},{"text":"            \"forestgreen\" => rgb!(34, 139, 34),","highlight_start":1,"highlight_end":48},{"text":"            \"gainsboro\" => rgb!(220, 220, 220),","highlight_start":1,"highlight_end":48},{"text":"            \"ghostwhite\" => rgb!(248, 248, 255),","highlight_start":1,"highlight_end":49},{"text":"            \"gold\" => rgb!(255, 215, 0),","highlight_start":1,"highlight_end":41},{"text":"            \"goldenrod\" => rgb!(218, 165, 32),","highlight_start":1,"highlight_end":47},{"text":"            \"greenyellow\" => rgb!(173, 255, 47),","highlight_start":1,"highlight_end":49},{"text":"            \"grey\" => rgb!(128, 128, 128),","highlight_start":1,"highlight_end":43},{"text":"            \"honeydew\" => rgb!(240, 255, 240),","highlight_start":1,"highlight_end":47},{"text":"            \"hotpink\" => rgb!(255, 105, 180),","highlight_start":1,"highlight_end":46},{"text":"            \"indianred\" => rgb!(205, 92, 92),","highlight_start":1,"highlight_end":46},{"text":"            \"indigo\" => rgb!(75, 0, 130),","highlight_start":1,"highlight_end":42},{"text":"            \"ivory\" => rgb!(255, 255, 240),","highlight_start":1,"highlight_end":44},{"text":"            \"khaki\" => rgb!(240, 230, 140),","highlight_start":1,"highlight_end":44},{"text":"            \"lavender\" => rgb!(230, 230, 250),","highlight_start":1,"highlight_end":47},{"text":"            \"lavenderblush\" => rgb!(255, 240, 245),","highlight_start":1,"highlight_end":52},{"text":"            \"lawngreen\" => rgb!(124, 252, 0),","highlight_start":1,"highlight_end":46},{"text":"            \"lemonchiffon\" => rgb!(255, 250, 205),","highlight_start":1,"highlight_end":51},{"text":"            \"lightblue\" => rgb!(173, 216, 230),","highlight_start":1,"highlight_end":48},{"text":"            \"lightcoral\" => rgb!(240, 128, 128),","highlight_start":1,"highlight_end":49},{"text":"            \"lightcyan\" => rgb!(224, 255, 255),","highlight_start":1,"highlight_end":48},{"text":"            \"lightgoldenrodyellow\" => rgb!(250, 250, 210),","highlight_start":1,"highlight_end":59},{"text":"            \"lightgray\" => rgb!(211, 211, 211),","highlight_start":1,"highlight_end":48},{"text":"            \"lightgreen\" => rgb!(144, 238, 144),","highlight_start":1,"highlight_end":49},{"text":"            \"lightgrey\" => rgb!(211, 211, 211),","highlight_start":1,"highlight_end":48},{"text":"            \"lightpink\" => rgb!(255, 182, 193),","highlight_start":1,"highlight_end":48},{"text":"            \"lightsalmon\" => rgb!(255, 160, 122),","highlight_start":1,"highlight_end":50},{"text":"            \"lightseagreen\" => rgb!(32, 178, 170),","highlight_start":1,"highlight_end":51},{"text":"            \"lightskyblue\" => rgb!(135, 206, 250),","highlight_start":1,"highlight_end":51},{"text":"            \"lightslategray\" => rgb!(119, 136, 153),","highlight_start":1,"highlight_end":53},{"text":"            \"lightslategrey\" => rgb!(119, 136, 153),","highlight_start":1,"highlight_end":53},{"text":"            \"lightsteelblue\" => rgb!(176, 196, 222),","highlight_start":1,"highlight_end":53},{"text":"            \"lightyellow\" => rgb!(255, 255, 224),","highlight_start":1,"highlight_end":50},{"text":"            \"limegreen\" => rgb!(50, 205, 50),","highlight_start":1,"highlight_end":46},{"text":"            \"linen\" => rgb!(250, 240, 230),","highlight_start":1,"highlight_end":44},{"text":"            \"magenta\" => rgb!(255, 0, 255),","highlight_start":1,"highlight_end":44},{"text":"            \"mediumaquamarine\" => rgb!(102, 205, 170),","highlight_start":1,"highlight_end":55},{"text":"            \"mediumblue\" => rgb!(0, 0, 205),","highlight_start":1,"highlight_end":45},{"text":"            \"mediumorchid\" => rgb!(186, 85, 211),","highlight_start":1,"highlight_end":50},{"text":"            \"mediumpurple\" => rgb!(147, 112, 219),","highlight_start":1,"highlight_end":51},{"text":"            \"mediumseagreen\" => rgb!(60, 179, 113),","highlight_start":1,"highlight_end":52},{"text":"            \"mediumslateblue\" => rgb!(123, 104, 238),","highlight_start":1,"highlight_end":54},{"text":"            \"mediumspringgreen\" => rgb!(0, 250, 154),","highlight_start":1,"highlight_end":54},{"text":"            \"mediumturquoise\" => rgb!(72, 209, 204),","highlight_start":1,"highlight_end":53},{"text":"            \"mediumvioletred\" => rgb!(199, 21, 133),","highlight_start":1,"highlight_end":53},{"text":"            \"midnightblue\" => rgb!(25, 25, 112),","highlight_start":1,"highlight_end":49},{"text":"            \"mintcream\" => rgb!(245, 255, 250),","highlight_start":1,"highlight_end":48},{"text":"            \"mistyrose\" => rgb!(255, 228, 225),","highlight_start":1,"highlight_end":48},{"text":"            \"moccasin\" => rgb!(255, 228, 181),","highlight_start":1,"highlight_end":47},{"text":"            \"navajowhite\" => rgb!(255, 222, 173),","highlight_start":1,"highlight_end":50},{"text":"            \"oldlace\" => rgb!(253, 245, 230),","highlight_start":1,"highlight_end":46},{"text":"            \"olivedrab\" => rgb!(107, 142, 35),","highlight_start":1,"highlight_end":47},{"text":"            \"orange\" => rgb!(255, 165, 0),","highlight_start":1,"highlight_end":43},{"text":"            \"orangered\" => rgb!(255, 69, 0),","highlight_start":1,"highlight_end":45},{"text":"            \"orchid\" => rgb!(218, 112, 214),","highlight_start":1,"highlight_end":45},{"text":"            \"palegoldenrod\" => rgb!(238, 232, 170),","highlight_start":1,"highlight_end":52},{"text":"            \"palegreen\" => rgb!(152, 251, 152),","highlight_start":1,"highlight_end":48},{"text":"            \"paleturquoise\" => rgb!(175, 238, 238),","highlight_start":1,"highlight_end":52},{"text":"            \"palevioletred\" => rgb!(219, 112, 147),","highlight_start":1,"highlight_end":52},{"text":"            \"papayawhip\" => rgb!(255, 239, 213),","highlight_start":1,"highlight_end":49},{"text":"            \"peachpuff\" => rgb!(255, 218, 185),","highlight_start":1,"highlight_end":48},{"text":"            \"peru\" => rgb!(205, 133, 63),","highlight_start":1,"highlight_end":42},{"text":"            \"pink\" => rgb!(255, 192, 203),","highlight_start":1,"highlight_end":43},{"text":"            \"plum\" => rgb!(221, 160, 221),","highlight_start":1,"highlight_end":43},{"text":"            \"powderblue\" => rgb!(176, 224, 230),","highlight_start":1,"highlight_end":49},{"text":"            \"rebeccapurple\" => rgb!(102, 51, 153),","highlight_start":1,"highlight_end":51},{"text":"            \"rosybrown\" => rgb!(188, 143, 143),","highlight_start":1,"highlight_end":48},{"text":"            \"royalblue\" => rgb!(65, 105, 225),","highlight_start":1,"highlight_end":47},{"text":"            \"saddlebrown\" => rgb!(139, 69, 19),","highlight_start":1,"highlight_end":48},{"text":"            \"salmon\" => rgb!(250, 128, 114),","highlight_start":1,"highlight_end":45},{"text":"            \"sandybrown\" => rgb!(244, 164, 96),","highlight_start":1,"highlight_end":48},{"text":"            \"seagreen\" => rgb!(46, 139, 87),","highlight_start":1,"highlight_end":45},{"text":"            \"seashell\" => rgb!(255, 245, 238),","highlight_start":1,"highlight_end":47},{"text":"            \"sienna\" => rgb!(160, 82, 45),","highlight_start":1,"highlight_end":43},{"text":"            \"skyblue\" => rgb!(135, 206, 235),","highlight_start":1,"highlight_end":46},{"text":"            \"slateblue\" => rgb!(106, 90, 205),","highlight_start":1,"highlight_end":47},{"text":"            \"slategray\" => rgb!(112, 128, 144),","highlight_start":1,"highlight_end":48},{"text":"            \"slategrey\" => rgb!(112, 128, 144),","highlight_start":1,"highlight_end":48},{"text":"            \"snow\" => rgb!(255, 250, 250),","highlight_start":1,"highlight_end":43},{"text":"            \"springgreen\" => rgb!(0, 255, 127),","highlight_start":1,"highlight_end":48},{"text":"            \"steelblue\" => rgb!(70, 130, 180),","highlight_start":1,"highlight_end":47},{"text":"            \"tan\" => rgb!(210, 180, 140),","highlight_start":1,"highlight_end":42},{"text":"            \"thistle\" => rgb!(216, 191, 216),","highlight_start":1,"highlight_end":46},{"text":"            \"tomato\" => rgb!(255, 99, 71),","highlight_start":1,"highlight_end":43},{"text":"            \"turquoise\" => rgb!(64, 224, 208),","highlight_start":1,"highlight_end":47},{"text":"            \"violet\" => rgb!(238, 130, 238),","highlight_start":1,"highlight_end":45},{"text":"            \"wheat\" => rgb!(245, 222, 179),","highlight_start":1,"highlight_end":44},{"text":"            \"whitesmoke\" => rgb!(245, 245, 245),","highlight_start":1,"highlight_end":49},{"text":"            \"yellowgreen\" => rgb!(154, 205, 50),","highlight_start":1,"highlight_end":49},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            \"transparent\" => Color::RGBA(RGBA { red: 0, green: 0, blue: 0, alpha: 0 }),","highlight_start":1,"highlight_end":88},{"text":"            \"currentcolor\" => Color::CurrentColor,","highlight_start":1,"highlight_end":51},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"ascii_case_insensitive_phf_map!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":2872,"byte_end":2915,"line_start":80,"line_end":80,"column_start":1,"column_end":44,"is_primary":false,"text":[{"text":"macro_rules! ascii_case_insensitive_phf_map {","highlight_start":1,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"cssparser_internal__invoke_proc_macro!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8689,"byte_end":8713,"line_start":255,"line_end":255,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        macro_rules! $macro_name {","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[allow(proc_macro_back_compat)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: using `procedural-masquerade` crate\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs:371:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m371\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ascii_case_insensitive_phf_map! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        keyword -> Color = {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m373\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"black\" => rgb!(0, 0, 0),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"silver\" => rgb!(192, 192, 192),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m525\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m526\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(proc_macro_back_compat)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `cssparser_internal__invoke_proc_macro` which comes from the expansion of the macro `ascii_case_insensitive_phf_map` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"using `procedural-masquerade` crate","code":{"code":"proc_macro_back_compat","explanation":null},"level":"warning","spans":[{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8966,"byte_end":8995,"line_start":259,"line_end":259,"column_start":46,"column_end":75,"is_primary":true,"text":[{"text":"                                        enum ProceduralMasqueradeDummyType {","highlight_start":46,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":3424,"byte_end":3545,"line_start":91,"line_end":93,"column_start":17,"column_end":18,"is_primary":false,"text":[{"text":"                cssparser_internal__invoke_proc_macro! {","highlight_start":17,"highlight_end":57},{"text":"                    cssparser_internal__max_len!( $( $key )+ )","highlight_start":1,"highlight_end":63},{"text":"                }","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":11267,"byte_end":18432,"line_start":371,"line_end":526,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    ascii_case_insensitive_phf_map! {","highlight_start":5,"highlight_end":38},{"text":"        keyword -> Color = {","highlight_start":1,"highlight_end":29},{"text":"            \"black\" => rgb!(0, 0, 0),","highlight_start":1,"highlight_end":38},{"text":"            \"silver\" => rgb!(192, 192, 192),","highlight_start":1,"highlight_end":45},{"text":"            \"gray\" => rgb!(128, 128, 128),","highlight_start":1,"highlight_end":43},{"text":"            \"white\" => rgb!(255, 255, 255),","highlight_start":1,"highlight_end":44},{"text":"            \"maroon\" => rgb!(128, 0, 0),","highlight_start":1,"highlight_end":41},{"text":"            \"red\" => rgb!(255, 0, 0),","highlight_start":1,"highlight_end":38},{"text":"            \"purple\" => rgb!(128, 0, 128),","highlight_start":1,"highlight_end":43},{"text":"            \"fuchsia\" => rgb!(255, 0, 255),","highlight_start":1,"highlight_end":44},{"text":"            \"green\" => rgb!(0, 128, 0),","highlight_start":1,"highlight_end":40},{"text":"            \"lime\" => rgb!(0, 255, 0),","highlight_start":1,"highlight_end":39},{"text":"            \"olive\" => rgb!(128, 128, 0),","highlight_start":1,"highlight_end":42},{"text":"            \"yellow\" => rgb!(255, 255, 0),","highlight_start":1,"highlight_end":43},{"text":"            \"navy\" => rgb!(0, 0, 128),","highlight_start":1,"highlight_end":39},{"text":"            \"blue\" => rgb!(0, 0, 255),","highlight_start":1,"highlight_end":39},{"text":"            \"teal\" => rgb!(0, 128, 128),","highlight_start":1,"highlight_end":41},{"text":"            \"aqua\" => rgb!(0, 255, 255),","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            \"aliceblue\" => rgb!(240, 248, 255),","highlight_start":1,"highlight_end":48},{"text":"            \"antiquewhite\" => rgb!(250, 235, 215),","highlight_start":1,"highlight_end":51},{"text":"            \"aquamarine\" => rgb!(127, 255, 212),","highlight_start":1,"highlight_end":49},{"text":"            \"azure\" => rgb!(240, 255, 255),","highlight_start":1,"highlight_end":44},{"text":"            \"beige\" => rgb!(245, 245, 220),","highlight_start":1,"highlight_end":44},{"text":"            \"bisque\" => rgb!(255, 228, 196),","highlight_start":1,"highlight_end":45},{"text":"            \"blanchedalmond\" => rgb!(255, 235, 205),","highlight_start":1,"highlight_end":53},{"text":"            \"blueviolet\" => rgb!(138, 43, 226),","highlight_start":1,"highlight_end":48},{"text":"            \"brown\" => rgb!(165, 42, 42),","highlight_start":1,"highlight_end":42},{"text":"            \"burlywood\" => rgb!(222, 184, 135),","highlight_start":1,"highlight_end":48},{"text":"            \"cadetblue\" => rgb!(95, 158, 160),","highlight_start":1,"highlight_end":47},{"text":"            \"chartreuse\" => rgb!(127, 255, 0),","highlight_start":1,"highlight_end":47},{"text":"            \"chocolate\" => rgb!(210, 105, 30),","highlight_start":1,"highlight_end":47},{"text":"            \"coral\" => rgb!(255, 127, 80),","highlight_start":1,"highlight_end":43},{"text":"            \"cornflowerblue\" => rgb!(100, 149, 237),","highlight_start":1,"highlight_end":53},{"text":"            \"cornsilk\" => rgb!(255, 248, 220),","highlight_start":1,"highlight_end":47},{"text":"            \"crimson\" => rgb!(220, 20, 60),","highlight_start":1,"highlight_end":44},{"text":"            \"cyan\" => rgb!(0, 255, 255),","highlight_start":1,"highlight_end":41},{"text":"            \"darkblue\" => rgb!(0, 0, 139),","highlight_start":1,"highlight_end":43},{"text":"            \"darkcyan\" => rgb!(0, 139, 139),","highlight_start":1,"highlight_end":45},{"text":"            \"darkgoldenrod\" => rgb!(184, 134, 11),","highlight_start":1,"highlight_end":51},{"text":"            \"darkgray\" => rgb!(169, 169, 169),","highlight_start":1,"highlight_end":47},{"text":"            \"darkgreen\" => rgb!(0, 100, 0),","highlight_start":1,"highlight_end":44},{"text":"            \"darkgrey\" => rgb!(169, 169, 169),","highlight_start":1,"highlight_end":47},{"text":"            \"darkkhaki\" => rgb!(189, 183, 107),","highlight_start":1,"highlight_end":48},{"text":"            \"darkmagenta\" => rgb!(139, 0, 139),","highlight_start":1,"highlight_end":48},{"text":"            \"darkolivegreen\" => rgb!(85, 107, 47),","highlight_start":1,"highlight_end":51},{"text":"            \"darkorange\" => rgb!(255, 140, 0),","highlight_start":1,"highlight_end":47},{"text":"            \"darkorchid\" => rgb!(153, 50, 204),","highlight_start":1,"highlight_end":48},{"text":"            \"darkred\" => rgb!(139, 0, 0),","highlight_start":1,"highlight_end":42},{"text":"            \"darksalmon\" => rgb!(233, 150, 122),","highlight_start":1,"highlight_end":49},{"text":"            \"darkseagreen\" => rgb!(143, 188, 143),","highlight_start":1,"highlight_end":51},{"text":"            \"darkslateblue\" => rgb!(72, 61, 139),","highlight_start":1,"highlight_end":50},{"text":"            \"darkslategray\" => rgb!(47, 79, 79),","highlight_start":1,"highlight_end":49},{"text":"            \"darkslategrey\" => rgb!(47, 79, 79),","highlight_start":1,"highlight_end":49},{"text":"            \"darkturquoise\" => rgb!(0, 206, 209),","highlight_start":1,"highlight_end":50},{"text":"            \"darkviolet\" => rgb!(148, 0, 211),","highlight_start":1,"highlight_end":47},{"text":"            \"deeppink\" => rgb!(255, 20, 147),","highlight_start":1,"highlight_end":46},{"text":"            \"deepskyblue\" => rgb!(0, 191, 255),","highlight_start":1,"highlight_end":48},{"text":"            \"dimgray\" => rgb!(105, 105, 105),","highlight_start":1,"highlight_end":46},{"text":"            \"dimgrey\" => rgb!(105, 105, 105),","highlight_start":1,"highlight_end":46},{"text":"            \"dodgerblue\" => rgb!(30, 144, 255),","highlight_start":1,"highlight_end":48},{"text":"            \"firebrick\" => rgb!(178, 34, 34),","highlight_start":1,"highlight_end":46},{"text":"            \"floralwhite\" => rgb!(255, 250, 240),","highlight_start":1,"highlight_end":50},{"text":"            \"forestgreen\" => rgb!(34, 139, 34),","highlight_start":1,"highlight_end":48},{"text":"            \"gainsboro\" => rgb!(220, 220, 220),","highlight_start":1,"highlight_end":48},{"text":"            \"ghostwhite\" => rgb!(248, 248, 255),","highlight_start":1,"highlight_end":49},{"text":"            \"gold\" => rgb!(255, 215, 0),","highlight_start":1,"highlight_end":41},{"text":"            \"goldenrod\" => rgb!(218, 165, 32),","highlight_start":1,"highlight_end":47},{"text":"            \"greenyellow\" => rgb!(173, 255, 47),","highlight_start":1,"highlight_end":49},{"text":"            \"grey\" => rgb!(128, 128, 128),","highlight_start":1,"highlight_end":43},{"text":"            \"honeydew\" => rgb!(240, 255, 240),","highlight_start":1,"highlight_end":47},{"text":"            \"hotpink\" => rgb!(255, 105, 180),","highlight_start":1,"highlight_end":46},{"text":"            \"indianred\" => rgb!(205, 92, 92),","highlight_start":1,"highlight_end":46},{"text":"            \"indigo\" => rgb!(75, 0, 130),","highlight_start":1,"highlight_end":42},{"text":"            \"ivory\" => rgb!(255, 255, 240),","highlight_start":1,"highlight_end":44},{"text":"            \"khaki\" => rgb!(240, 230, 140),","highlight_start":1,"highlight_end":44},{"text":"            \"lavender\" => rgb!(230, 230, 250),","highlight_start":1,"highlight_end":47},{"text":"            \"lavenderblush\" => rgb!(255, 240, 245),","highlight_start":1,"highlight_end":52},{"text":"            \"lawngreen\" => rgb!(124, 252, 0),","highlight_start":1,"highlight_end":46},{"text":"            \"lemonchiffon\" => rgb!(255, 250, 205),","highlight_start":1,"highlight_end":51},{"text":"            \"lightblue\" => rgb!(173, 216, 230),","highlight_start":1,"highlight_end":48},{"text":"            \"lightcoral\" => rgb!(240, 128, 128),","highlight_start":1,"highlight_end":49},{"text":"            \"lightcyan\" => rgb!(224, 255, 255),","highlight_start":1,"highlight_end":48},{"text":"            \"lightgoldenrodyellow\" => rgb!(250, 250, 210),","highlight_start":1,"highlight_end":59},{"text":"            \"lightgray\" => rgb!(211, 211, 211),","highlight_start":1,"highlight_end":48},{"text":"            \"lightgreen\" => rgb!(144, 238, 144),","highlight_start":1,"highlight_end":49},{"text":"            \"lightgrey\" => rgb!(211, 211, 211),","highlight_start":1,"highlight_end":48},{"text":"            \"lightpink\" => rgb!(255, 182, 193),","highlight_start":1,"highlight_end":48},{"text":"            \"lightsalmon\" => rgb!(255, 160, 122),","highlight_start":1,"highlight_end":50},{"text":"            \"lightseagreen\" => rgb!(32, 178, 170),","highlight_start":1,"highlight_end":51},{"text":"            \"lightskyblue\" => rgb!(135, 206, 250),","highlight_start":1,"highlight_end":51},{"text":"            \"lightslategray\" => rgb!(119, 136, 153),","highlight_start":1,"highlight_end":53},{"text":"            \"lightslategrey\" => rgb!(119, 136, 153),","highlight_start":1,"highlight_end":53},{"text":"            \"lightsteelblue\" => rgb!(176, 196, 222),","highlight_start":1,"highlight_end":53},{"text":"            \"lightyellow\" => rgb!(255, 255, 224),","highlight_start":1,"highlight_end":50},{"text":"            \"limegreen\" => rgb!(50, 205, 50),","highlight_start":1,"highlight_end":46},{"text":"            \"linen\" => rgb!(250, 240, 230),","highlight_start":1,"highlight_end":44},{"text":"            \"magenta\" => rgb!(255, 0, 255),","highlight_start":1,"highlight_end":44},{"text":"            \"mediumaquamarine\" => rgb!(102, 205, 170),","highlight_start":1,"highlight_end":55},{"text":"            \"mediumblue\" => rgb!(0, 0, 205),","highlight_start":1,"highlight_end":45},{"text":"            \"mediumorchid\" => rgb!(186, 85, 211),","highlight_start":1,"highlight_end":50},{"text":"            \"mediumpurple\" => rgb!(147, 112, 219),","highlight_start":1,"highlight_end":51},{"text":"            \"mediumseagreen\" => rgb!(60, 179, 113),","highlight_start":1,"highlight_end":52},{"text":"            \"mediumslateblue\" => rgb!(123, 104, 238),","highlight_start":1,"highlight_end":54},{"text":"            \"mediumspringgreen\" => rgb!(0, 250, 154),","highlight_start":1,"highlight_end":54},{"text":"            \"mediumturquoise\" => rgb!(72, 209, 204),","highlight_start":1,"highlight_end":53},{"text":"            \"mediumvioletred\" => rgb!(199, 21, 133),","highlight_start":1,"highlight_end":53},{"text":"            \"midnightblue\" => rgb!(25, 25, 112),","highlight_start":1,"highlight_end":49},{"text":"            \"mintcream\" => rgb!(245, 255, 250),","highlight_start":1,"highlight_end":48},{"text":"            \"mistyrose\" => rgb!(255, 228, 225),","highlight_start":1,"highlight_end":48},{"text":"            \"moccasin\" => rgb!(255, 228, 181),","highlight_start":1,"highlight_end":47},{"text":"            \"navajowhite\" => rgb!(255, 222, 173),","highlight_start":1,"highlight_end":50},{"text":"            \"oldlace\" => rgb!(253, 245, 230),","highlight_start":1,"highlight_end":46},{"text":"            \"olivedrab\" => rgb!(107, 142, 35),","highlight_start":1,"highlight_end":47},{"text":"            \"orange\" => rgb!(255, 165, 0),","highlight_start":1,"highlight_end":43},{"text":"            \"orangered\" => rgb!(255, 69, 0),","highlight_start":1,"highlight_end":45},{"text":"            \"orchid\" => rgb!(218, 112, 214),","highlight_start":1,"highlight_end":45},{"text":"            \"palegoldenrod\" => rgb!(238, 232, 170),","highlight_start":1,"highlight_end":52},{"text":"            \"palegreen\" => rgb!(152, 251, 152),","highlight_start":1,"highlight_end":48},{"text":"            \"paleturquoise\" => rgb!(175, 238, 238),","highlight_start":1,"highlight_end":52},{"text":"            \"palevioletred\" => rgb!(219, 112, 147),","highlight_start":1,"highlight_end":52},{"text":"            \"papayawhip\" => rgb!(255, 239, 213),","highlight_start":1,"highlight_end":49},{"text":"            \"peachpuff\" => rgb!(255, 218, 185),","highlight_start":1,"highlight_end":48},{"text":"            \"peru\" => rgb!(205, 133, 63),","highlight_start":1,"highlight_end":42},{"text":"            \"pink\" => rgb!(255, 192, 203),","highlight_start":1,"highlight_end":43},{"text":"            \"plum\" => rgb!(221, 160, 221),","highlight_start":1,"highlight_end":43},{"text":"            \"powderblue\" => rgb!(176, 224, 230),","highlight_start":1,"highlight_end":49},{"text":"            \"rebeccapurple\" => rgb!(102, 51, 153),","highlight_start":1,"highlight_end":51},{"text":"            \"rosybrown\" => rgb!(188, 143, 143),","highlight_start":1,"highlight_end":48},{"text":"            \"royalblue\" => rgb!(65, 105, 225),","highlight_start":1,"highlight_end":47},{"text":"            \"saddlebrown\" => rgb!(139, 69, 19),","highlight_start":1,"highlight_end":48},{"text":"            \"salmon\" => rgb!(250, 128, 114),","highlight_start":1,"highlight_end":45},{"text":"            \"sandybrown\" => rgb!(244, 164, 96),","highlight_start":1,"highlight_end":48},{"text":"            \"seagreen\" => rgb!(46, 139, 87),","highlight_start":1,"highlight_end":45},{"text":"            \"seashell\" => rgb!(255, 245, 238),","highlight_start":1,"highlight_end":47},{"text":"            \"sienna\" => rgb!(160, 82, 45),","highlight_start":1,"highlight_end":43},{"text":"            \"skyblue\" => rgb!(135, 206, 235),","highlight_start":1,"highlight_end":46},{"text":"            \"slateblue\" => rgb!(106, 90, 205),","highlight_start":1,"highlight_end":47},{"text":"            \"slategray\" => rgb!(112, 128, 144),","highlight_start":1,"highlight_end":48},{"text":"            \"slategrey\" => rgb!(112, 128, 144),","highlight_start":1,"highlight_end":48},{"text":"            \"snow\" => rgb!(255, 250, 250),","highlight_start":1,"highlight_end":43},{"text":"            \"springgreen\" => rgb!(0, 255, 127),","highlight_start":1,"highlight_end":48},{"text":"            \"steelblue\" => rgb!(70, 130, 180),","highlight_start":1,"highlight_end":47},{"text":"            \"tan\" => rgb!(210, 180, 140),","highlight_start":1,"highlight_end":42},{"text":"            \"thistle\" => rgb!(216, 191, 216),","highlight_start":1,"highlight_end":46},{"text":"            \"tomato\" => rgb!(255, 99, 71),","highlight_start":1,"highlight_end":43},{"text":"            \"turquoise\" => rgb!(64, 224, 208),","highlight_start":1,"highlight_end":47},{"text":"            \"violet\" => rgb!(238, 130, 238),","highlight_start":1,"highlight_end":45},{"text":"            \"wheat\" => rgb!(245, 222, 179),","highlight_start":1,"highlight_end":44},{"text":"            \"whitesmoke\" => rgb!(245, 245, 245),","highlight_start":1,"highlight_end":49},{"text":"            \"yellowgreen\" => rgb!(154, 205, 50),","highlight_start":1,"highlight_end":49},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            \"transparent\" => Color::RGBA(RGBA { red: 0, green: 0, blue: 0, alpha: 0 }),","highlight_start":1,"highlight_end":88},{"text":"            \"currentcolor\" => Color::CurrentColor,","highlight_start":1,"highlight_end":51},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"ascii_case_insensitive_phf_map!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":2872,"byte_end":2915,"line_start":80,"line_end":80,"column_start":1,"column_end":44,"is_primary":false,"text":[{"text":"macro_rules! ascii_case_insensitive_phf_map {","highlight_start":1,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"cssparser_internal__invoke_proc_macro!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8689,"byte_end":8713,"line_start":255,"line_end":255,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        macro_rules! $macro_name {","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[allow(proc_macro_back_compat)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: using `procedural-masquerade` crate\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs:371:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m371\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ascii_case_insensitive_phf_map! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        keyword -> Color = {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m373\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"black\" => rgb!(0, 0, 0),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"silver\" => rgb!(192, 192, 192),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m525\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m526\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(proc_macro_back_compat)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `cssparser_internal__invoke_proc_macro` which comes from the expansion of the macro `ascii_case_insensitive_phf_map` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"using `procedural-masquerade` crate","code":{"code":"proc_macro_back_compat","explanation":null},"level":"warning","spans":[{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8966,"byte_end":8995,"line_start":259,"line_end":259,"column_start":46,"column_end":75,"is_primary":true,"text":[{"text":"                                        enum ProceduralMasqueradeDummyType {","highlight_start":46,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1423,"byte_end":1567,"line_start":38,"line_end":40,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            cssparser_internal__invoke_proc_macro! {","highlight_start":13,"highlight_end":53},{"text":"                cssparser_internal__assert_ascii_lowercase__max_len!( $( $match_body )* )","highlight_start":1,"highlight_end":90},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":19764,"byte_end":20067,"line_start":571,"line_end":575,"column_start":43,"column_end":6,"is_primary":false,"text":[{"text":"    let (red, green, blue, uses_commas) = match_ignore_ascii_case! { name,","highlight_start":43,"highlight_end":75},{"text":"        \"rgb\" | \"rgba\" => parse_rgb_components_rgb(component_parser, arguments)?,","highlight_start":1,"highlight_end":82},{"text":"        \"hsl\" | \"hsla\" => parse_rgb_components_hsl(component_parser, arguments)?,","highlight_start":1,"highlight_end":82},{"text":"        _ => return Err(arguments.new_unexpected_token_error(Token::Ident(name.to_owned().into()))),","highlight_start":1,"highlight_end":101},{"text":"    };","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"match_ignore_ascii_case!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1315,"byte_end":1351,"line_start":35,"line_end":35,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"macro_rules! match_ignore_ascii_case {","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"cssparser_internal__invoke_proc_macro!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8689,"byte_end":8713,"line_start":255,"line_end":255,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        macro_rules! $macro_name {","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[allow(proc_macro_back_compat)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: using `procedural-masquerade` crate\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs:571:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m571\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    let (red, green, blue, uses_commas) = match_ignore_ascii_case! { name,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m___________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m572\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"rgb\" | \"rgba\" => parse_rgb_components_rgb(component_parser, arguments)?,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m573\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"hsl\" | \"hsla\" => parse_rgb_components_hsl(component_parser, arguments)?,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m574\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => return Err(arguments.new_unexpected_token_error(Token::Ident(name.to_owned().into()))),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m575\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(proc_macro_back_compat)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `cssparser_internal__invoke_proc_macro` which comes from the expansion of the macro `match_ignore_ascii_case` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"using `procedural-masquerade` crate","code":{"code":"proc_macro_back_compat","explanation":null},"level":"warning","spans":[{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8966,"byte_end":8995,"line_start":259,"line_end":259,"column_start":46,"column_end":75,"is_primary":true,"text":[{"text":"                                        enum ProceduralMasqueradeDummyType {","highlight_start":46,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1423,"byte_end":1567,"line_start":38,"line_end":40,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            cssparser_internal__invoke_proc_macro! {","highlight_start":13,"highlight_end":53},{"text":"                cssparser_internal__assert_ascii_lowercase__max_len!( $( $match_body )* )","highlight_start":1,"highlight_end":90},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/nth.rs","byte_start":933,"byte_end":1323,"line_start":22,"line_end":30,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            match_ignore_ascii_case! {","highlight_start":13,"highlight_end":39},{"text":"                &unit,","highlight_start":1,"highlight_end":23},{"text":"                \"n\" => Ok(parse_b(input, a)?),","highlight_start":1,"highlight_end":47},{"text":"                \"n-\" => Ok(parse_signless_b(input, a, -1)?),","highlight_start":1,"highlight_end":61},{"text":"                _ => match parse_n_dash_digits(&*unit) {","highlight_start":1,"highlight_end":57},{"text":"                    Ok(b) => Ok((a, b)),","highlight_start":1,"highlight_end":41},{"text":"                    Err(()) => Err(input.new_basic_unexpected_token_error(Token::Ident(unit.clone())))","highlight_start":1,"highlight_end":103},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"match_ignore_ascii_case!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1315,"byte_end":1351,"line_start":35,"line_end":35,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"macro_rules! match_ignore_ascii_case {","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"cssparser_internal__invoke_proc_macro!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8689,"byte_end":8713,"line_start":255,"line_end":255,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        macro_rules! $macro_name {","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[allow(proc_macro_back_compat)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: using `procedural-masquerade` crate\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/nth.rs:22:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            match_ignore_ascii_case! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                &unit,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"n\" => Ok(parse_b(input, a)?),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"n-\" => Ok(parse_signless_b(input, a, -1)?),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(proc_macro_back_compat)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `cssparser_internal__invoke_proc_macro` which comes from the expansion of the macro `match_ignore_ascii_case` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"using `procedural-masquerade` crate","code":{"code":"proc_macro_back_compat","explanation":null},"level":"warning","spans":[{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8966,"byte_end":8995,"line_start":259,"line_end":259,"column_start":46,"column_end":75,"is_primary":true,"text":[{"text":"                                        enum ProceduralMasqueradeDummyType {","highlight_start":46,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1423,"byte_end":1567,"line_start":38,"line_end":40,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            cssparser_internal__invoke_proc_macro! {","highlight_start":13,"highlight_end":53},{"text":"                cssparser_internal__assert_ascii_lowercase__max_len!( $( $match_body )* )","highlight_start":1,"highlight_end":90},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/nth.rs","byte_start":1379,"byte_end":2189,"line_start":33,"line_end":51,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            match_ignore_ascii_case! { &value,","highlight_start":13,"highlight_end":47},{"text":"                \"even\" => Ok((2, 0)),","highlight_start":1,"highlight_end":38},{"text":"                \"odd\" => Ok((2, 1)),","highlight_start":1,"highlight_end":37},{"text":"                \"n\" => Ok(parse_b(input, 1)?),","highlight_start":1,"highlight_end":47},{"text":"                \"-n\" => Ok(parse_b(input, -1)?),","highlight_start":1,"highlight_end":49},{"text":"                \"n-\" => Ok(parse_signless_b(input, 1, -1)?),","highlight_start":1,"highlight_end":61},{"text":"                \"-n-\" => Ok(parse_signless_b(input, -1, -1)?),","highlight_start":1,"highlight_end":63},{"text":"                _ => {","highlight_start":1,"highlight_end":23},{"text":"                    let (slice, a) = if value.starts_with(\"-\") {","highlight_start":1,"highlight_end":65},{"text":"                        (&value[1..], -1)","highlight_start":1,"highlight_end":42},{"text":"                    } else {","highlight_start":1,"highlight_end":29},{"text":"                        (&*value, 1)","highlight_start":1,"highlight_end":37},{"text":"                    };","highlight_start":1,"highlight_end":23},{"text":"                    match parse_n_dash_digits(slice) {","highlight_start":1,"highlight_end":55},{"text":"                        Ok(b) => Ok((a, b)),","highlight_start":1,"highlight_end":45},{"text":"                        Err(()) => Err(input.new_basic_unexpected_token_error(Token::Ident(value.clone())))","highlight_start":1,"highlight_end":108},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"match_ignore_ascii_case!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1315,"byte_end":1351,"line_start":35,"line_end":35,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"macro_rules! match_ignore_ascii_case {","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"cssparser_internal__invoke_proc_macro!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8689,"byte_end":8713,"line_start":255,"line_end":255,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        macro_rules! $macro_name {","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[allow(proc_macro_back_compat)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: using `procedural-masquerade` crate\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/nth.rs:33:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            match_ignore_ascii_case! { &value,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"even\" => Ok((2, 0)),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"odd\" => Ok((2, 1)),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"n\" => Ok(parse_b(input, 1)?),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(proc_macro_back_compat)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `cssparser_internal__invoke_proc_macro` which comes from the expansion of the macro `match_ignore_ascii_case` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"using `procedural-masquerade` crate","code":{"code":"proc_macro_back_compat","explanation":null},"level":"warning","spans":[{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8966,"byte_end":8995,"line_start":259,"line_end":259,"column_start":46,"column_end":75,"is_primary":true,"text":[{"text":"                                        enum ProceduralMasqueradeDummyType {","highlight_start":46,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1423,"byte_end":1567,"line_start":38,"line_end":40,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            cssparser_internal__invoke_proc_macro! {","highlight_start":13,"highlight_end":53},{"text":"                cssparser_internal__assert_ascii_lowercase__max_len!( $( $match_body )* )","highlight_start":1,"highlight_end":90},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/nth.rs","byte_start":2399,"byte_end":2794,"line_start":56,"line_end":63,"column_start":17,"column_end":18,"is_primary":false,"text":[{"text":"                match_ignore_ascii_case! { &value,","highlight_start":17,"highlight_end":51},{"text":"                    \"n\" => parse_b(input, 1),","highlight_start":1,"highlight_end":46},{"text":"                    \"n-\" => parse_signless_b(input, 1, -1),","highlight_start":1,"highlight_end":60},{"text":"                    _ => match parse_n_dash_digits(&*value) {","highlight_start":1,"highlight_end":62},{"text":"                        Ok(b) => Ok((1, b)),","highlight_start":1,"highlight_end":45},{"text":"                        Err(()) => Err(input.new_basic_unexpected_token_error(Token::Ident(value.clone())))","highlight_start":1,"highlight_end":108},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"match_ignore_ascii_case!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1315,"byte_end":1351,"line_start":35,"line_end":35,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"macro_rules! match_ignore_ascii_case {","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"cssparser_internal__invoke_proc_macro!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8689,"byte_end":8713,"line_start":255,"line_end":255,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        macro_rules! $macro_name {","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[allow(proc_macro_back_compat)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: using `procedural-masquerade` crate\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/nth.rs:56:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                match_ignore_ascii_case! { &value,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"n\" => parse_b(input, 1),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"n-\" => parse_signless_b(input, 1, -1),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    _ => match parse_n_dash_digits(&*value) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(proc_macro_back_compat)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `cssparser_internal__invoke_proc_macro` which comes from the expansion of the macro `match_ignore_ascii_case` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}]}
