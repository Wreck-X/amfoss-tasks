{"future_incompat_report":[{"diagnostic":{"message":"using `procedural-masquerade` crate","code":{"code":"proc_macro_back_compat","explanation":null},"level":"warning","spans":[{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8966,"byte_end":8995,"line_start":259,"line_end":259,"column_start":46,"column_end":75,"is_primary":true,"text":[{"text":"                                        enum ProceduralMasqueradeDummyType {","highlight_start":46,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1423,"byte_end":1567,"line_start":38,"line_end":40,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            cssparser_internal__invoke_proc_macro! {","highlight_start":13,"highlight_end":53},{"text":"                cssparser_internal__assert_ascii_lowercase__max_len!( $( $match_body )* )","highlight_start":1,"highlight_end":90},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/selectors-0.21.0/parser.rs","byte_start":65409,"byte_end":65638,"line_start":1804,"line_end":1809,"column_start":8,"column_end":6,"is_primary":false,"text":[{"text":"    Ok(match_ignore_ascii_case! {","highlight_start":8,"highlight_end":34},{"text":"        ident,","highlight_start":1,"highlight_end":15},{"text":"        \"i\" => AttributeFlags::AsciiCaseInsensitive,","highlight_start":1,"highlight_end":53},{"text":"        \"s\" => AttributeFlags::CaseSensitive,","highlight_start":1,"highlight_end":46},{"text":"        _ => return Err(location.new_basic_unexpected_token_error(token.clone())),","highlight_start":1,"highlight_end":83},{"text":"    })","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"match_ignore_ascii_case!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1315,"byte_end":1351,"line_start":35,"line_end":35,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"macro_rules! match_ignore_ascii_case {","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"cssparser_internal__invoke_proc_macro!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8689,"byte_end":8713,"line_start":255,"line_end":255,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        macro_rules! $macro_name {","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[allow(proc_macro_back_compat)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: using `procedural-masquerade` crate\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/selectors-0.21.0/parser.rs:1804:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1804\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    Ok(match_ignore_ascii_case! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1805\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ident,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1806\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"i\" => AttributeFlags::AsciiCaseInsensitive,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1807\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"s\" => AttributeFlags::CaseSensitive,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1808\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => return Err(location.new_basic_unexpected_token_error(token.clone())),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1809\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    })\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(proc_macro_back_compat)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `cssparser_internal__invoke_proc_macro` which comes from the expansion of the macro `match_ignore_ascii_case` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"using `procedural-masquerade` crate","code":{"code":"proc_macro_back_compat","explanation":null},"level":"warning","spans":[{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8966,"byte_end":8995,"line_start":259,"line_end":259,"column_start":46,"column_end":75,"is_primary":true,"text":[{"text":"                                        enum ProceduralMasqueradeDummyType {","highlight_start":46,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1423,"byte_end":1567,"line_start":38,"line_end":40,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            cssparser_internal__invoke_proc_macro! {","highlight_start":13,"highlight_end":53},{"text":"                cssparser_internal__assert_ascii_lowercase__max_len!( $( $match_body )* )","highlight_start":1,"highlight_end":90},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/selectors-0.21.0/parser.rs","byte_start":73296,"byte_end":74093,"line_start":2019,"line_end":2034,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    match_ignore_ascii_case! { &name,","highlight_start":5,"highlight_end":38},{"text":"        \"nth-child\" => return Ok(parse_nth_pseudo_class(input, Component::NthChild)?),","highlight_start":1,"highlight_end":87},{"text":"        \"nth-of-type\" => return Ok(parse_nth_pseudo_class(input, Component::NthOfType)?),","highlight_start":1,"highlight_end":90},{"text":"        \"nth-last-child\" => return Ok(parse_nth_pseudo_class(input, Component::NthLastChild)?),","highlight_start":1,"highlight_end":96},{"text":"        \"nth-last-of-type\" => return Ok(parse_nth_pseudo_class(input, Component::NthLastOfType)?),","highlight_start":1,"highlight_end":99},{"text":"        \"host\" => return Ok(Component::Host(Some(parse_inner_compound_selector(parser, input)?))),","highlight_start":1,"highlight_end":99},{"text":"        \"not\" => {","highlight_start":1,"highlight_end":19},{"text":"            if inside_negation {","highlight_start":1,"highlight_end":33},{"text":"                return Err(input.new_custom_error(","highlight_start":1,"highlight_end":51},{"text":"                    SelectorParseErrorKind::UnexpectedIdent(\"not\".into())","highlight_start":1,"highlight_end":74},{"text":"                ));","highlight_start":1,"highlight_end":20},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            return parse_negation(parser, input)","highlight_start":1,"highlight_end":49},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        _ => {}","highlight_start":1,"highlight_end":16},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"match_ignore_ascii_case!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1315,"byte_end":1351,"line_start":35,"line_end":35,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"macro_rules! match_ignore_ascii_case {","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"cssparser_internal__invoke_proc_macro!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8689,"byte_end":8713,"line_start":255,"line_end":255,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        macro_rules! $macro_name {","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[allow(proc_macro_back_compat)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: using `procedural-masquerade` crate\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/selectors-0.21.0/parser.rs:2019:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2019\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match_ignore_ascii_case! { &name,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2020\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"nth-child\" => return Ok(parse_nth_pseudo_class(input, Component::NthChild)?),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2021\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"nth-of-type\" => return Ok(parse_nth_pseudo_class(input, Component::NthOfType)?),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2022\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"nth-last-child\" => return Ok(parse_nth_pseudo_class(input, Component::NthLastChild)?),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2033\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => {}\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2034\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(proc_macro_back_compat)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `cssparser_internal__invoke_proc_macro` which comes from the expansion of the macro `match_ignore_ascii_case` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"using `procedural-masquerade` crate","code":{"code":"proc_macro_back_compat","explanation":null},"level":"warning","spans":[{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8966,"byte_end":8995,"line_start":259,"line_end":259,"column_start":46,"column_end":75,"is_primary":true,"text":[{"text":"                                        enum ProceduralMasqueradeDummyType {","highlight_start":46,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1423,"byte_end":1567,"line_start":38,"line_end":40,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            cssparser_internal__invoke_proc_macro! {","highlight_start":13,"highlight_end":53},{"text":"                cssparser_internal__assert_ascii_lowercase__max_len!( $( $match_body )* )","highlight_start":1,"highlight_end":90},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/selectors-0.21.0/parser.rs","byte_start":74783,"byte_end":74909,"line_start":2055,"line_end":2058,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    match_ignore_ascii_case! { name,","highlight_start":5,"highlight_end":37},{"text":"        \"before\" | \"after\" | \"first-line\" | \"first-letter\" => true,","highlight_start":1,"highlight_end":68},{"text":"        _ => false,","highlight_start":1,"highlight_end":20},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"match_ignore_ascii_case!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1315,"byte_end":1351,"line_start":35,"line_end":35,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"macro_rules! match_ignore_ascii_case {","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"cssparser_internal__invoke_proc_macro!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8689,"byte_end":8713,"line_start":255,"line_end":255,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        macro_rules! $macro_name {","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[allow(proc_macro_back_compat)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: using `procedural-masquerade` crate\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/selectors-0.21.0/parser.rs:2055:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2055\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match_ignore_ascii_case! { name,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2056\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"before\" | \"after\" | \"first-line\" | \"first-letter\" => true,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2057\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => false,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2058\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(proc_macro_back_compat)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `cssparser_internal__invoke_proc_macro` which comes from the expansion of the macro `match_ignore_ascii_case` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"using `procedural-masquerade` crate","code":{"code":"proc_macro_back_compat","explanation":null},"level":"warning","spans":[{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8966,"byte_end":8995,"line_start":259,"line_end":259,"column_start":46,"column_end":75,"is_primary":true,"text":[{"text":"                                        enum ProceduralMasqueradeDummyType {","highlight_start":46,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1423,"byte_end":1567,"line_start":38,"line_end":40,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            cssparser_internal__invoke_proc_macro! {","highlight_start":13,"highlight_end":53},{"text":"                cssparser_internal__assert_ascii_lowercase__max_len!( $( $match_body )* )","highlight_start":1,"highlight_end":90},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/selectors-0.21.0/parser.rs","byte_start":79181,"byte_end":79747,"line_start":2163,"line_end":2175,"column_start":6,"column_end":6,"is_primary":false,"text":[{"text":"    (match_ignore_ascii_case! { &name,","highlight_start":6,"highlight_end":39},{"text":"        \"first-child\" => Ok(Component::FirstChild),","highlight_start":1,"highlight_end":52},{"text":"        \"last-child\"  => Ok(Component::LastChild),","highlight_start":1,"highlight_end":51},{"text":"        \"only-child\"  => Ok(Component::OnlyChild),","highlight_start":1,"highlight_end":51},{"text":"        \"root\" => Ok(Component::Root),","highlight_start":1,"highlight_end":39},{"text":"        \"empty\" => Ok(Component::Empty),","highlight_start":1,"highlight_end":41},{"text":"        \"scope\" => Ok(Component::Scope),","highlight_start":1,"highlight_end":41},{"text":"        \"host\" if P::parse_host(parser) => Ok(Component::Host(None)),","highlight_start":1,"highlight_end":70},{"text":"        \"first-of-type\" => Ok(Component::FirstOfType),","highlight_start":1,"highlight_end":55},{"text":"        \"last-of-type\" => Ok(Component::LastOfType),","highlight_start":1,"highlight_end":53},{"text":"        \"only-of-type\" => Ok(Component::OnlyOfType),","highlight_start":1,"highlight_end":53},{"text":"        _ => Err(())","highlight_start":1,"highlight_end":21},{"text":"    })","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"match_ignore_ascii_case!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":1315,"byte_end":1351,"line_start":35,"line_end":35,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"macro_rules! match_ignore_ascii_case {","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"cssparser_internal__invoke_proc_macro!","def_site_span":{"file_name":"/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/procedural-masquerade-0.1.7/lib.rs","byte_start":8689,"byte_end":8713,"line_start":255,"line_end":255,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        macro_rules! $macro_name {","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[allow(proc_macro_back_compat)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: using `procedural-masquerade` crate\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/wreck/.cargo/registry/src/github.com-1ecc6299db9ec823/selectors-0.21.0/parser.rs:2163:6\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    (match_ignore_ascii_case! { &name,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m______^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"first-child\" => Ok(Component::FirstChild),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"last-child\"  => Ok(Component::LastChild),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"only-child\"  => Ok(Component::OnlyChild),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => Err(())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    })\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(proc_macro_back_compat)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `cssparser_internal__invoke_proc_macro` which comes from the expansion of the macro `match_ignore_ascii_case` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}]}
